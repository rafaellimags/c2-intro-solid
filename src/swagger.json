{
  "openapi": "3.0.0",
  "info": {
    "title": "Docs",
    "description": "API documentation training",
    "version": "1.0.0",
    "contact": {
      "email": "users@company.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create an user",
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "johndoe@email.com"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "E-mail already taken."
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a list of all users",
        "description": "If the requester is an admin, a list of all users is returned.",
        "parameters": [
          {
            "in": "header",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The UUID of the user making the request"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all users is returned"
          },
          "401": {
            "description": "Unauthorized. The user must be an admin."
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Create an admin",
        "description": "Turns a regular user into admin, by passing its id",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The UUID of the user to be promoted to admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "johndoe@email.com"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user has been successfully promoted to admin."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a single user",
        "description": "Get a single user from its id",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The UUID of the user which we want to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "A user is returned."
          },
          "400": {
            "description": "User not found."
          }
        }
      }
    }
  }
}